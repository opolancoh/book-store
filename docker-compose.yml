services:
  api:
    # Build the image using the Dockerfile in the current directory
    build: .
    
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "${HTTPS_PORT}:${HTTPS_PORT}"
    
    environment:
      # Set ASP.NET Core environment (defaults to Development)
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}

      # Configure Kestrel to listen on HTTPS port
      - ASPNETCORE_URLS=http://+:${HTTP_PORT};https://+:${HTTPS_PORT}

      # SSL certificate configuration
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${MYDOTNETCERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/my-dotnet-cert.pfx

      - ConnectionStrings__DefaultConnection=${CONNECTIONSTRINGS_DEFAULTCONNECTION}
    
    volumes:
      # SSL Certificate Configuration:
      # - Source: ${MYDOTNETCERT_PATH} (host machine path, e.g. ${HOME}/dev/certs/my-dotnet-cert)
      # - Target: /https (container path where certificate will be accessible)
      # - Mode: ro (read-only access for security)
      # 
      # The certificate file (my-dotnet-cert.pfx) must exist in the source directory
      # Example full path on host: /Users/username/dev/certs/my-dotnet-cert/my-dotnet-cert.pfx
      # Example full path in container: /https/my-dotnet-cert.pfx
      - ${MYDOTNETCERT_PATH}:/https:ro
    
    networks:
      - bookstore-network

networks:
  # Docker Compose will automatically create the network bookstore-network if it does not already exist.
  # If the network already exists, it will use the existing one without throwing an error.
  bookstore-network:
    driver: bridge 
