name: Update Version

on:
  workflow_call:
    inputs:
      commit_message:
        required: true
        type: string
      csproj_file:
        required: true
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Get latest version
        id: get_version
        run: |
          VERSION=$(grep -oP '(?<=<Version>)(.*?)(?=</Version>)' ${{ inputs.csproj_file }})
          echo "Current version: $VERSION"
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: bump_version
        run: |
          CURRENT_VERSION="${{ env.CURRENT_VERSION }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          if echo "${{ inputs.commit_message }}" | grep -q '\[major\]'; then
            ((MAJOR++))
            MINOR=0
            PATCH=0
          elif echo "${{ inputs.commit_message }}" | grep -q '\[minor\]'; then
            ((MINOR++))
            PATCH=0
          else
            ((PATCH++))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update project file
        run: |
          sed -i "s/<Version>.*<\/Version>/<Version>${{ env.NEW_VERSION }}<\/Version>/" ${{ inputs.csproj_file }}

      - name: Commit and push version change
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add ${{ inputs.csproj_file }}
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push
